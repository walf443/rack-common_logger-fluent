#!/usr/bin/env ruby

require 'optparse'
require 'json'

def main(argv)
  options = {}
  opt = OptionParser.new
  opt.on('-c', '--column=s') {|v| options[:column] = v }
  opt.on('-v', '--value=s') {|v| options[:value] = v }
  opt.on('-m', '--method=s') {|v| options[:method] = v }
  opt.on('-m', '--mode=s') {|v| options[:mode] = v }
  opt.parse!(argv)
  
  options[:method] ||= 'regexp'
  options[:mode] ||= 'filter'
  
  regexp = Regexp.compile(options[:value], 'i')
  
  while line = STDIN.gets
    line.chomp!
    date, tag, data = line.split(/\t/)
    data = JSON.parse(data)
  
    case options[:method]
    when 'regexp'
      show_if_match(line, options) {|options| regexp.match(data[options[:column]].to_s) }
    when 'lt'
      show_if_match(line, options) {|options| data[options[:column]] <= options[:value].to_f }
    when 'gt'
      show_if_match(line, options) {|options| data[options[:column]] >= options[:value].to_f }
    else
    end
  end
end

def show_if_match(line, options, &block)
  if block.call(options)
    if options[:mode] == "color"
      puts "\033[31m#{line}\033[0m"
    else
      puts line
    end
  else
    if options[:mode] == "color"
      puts line
    end
  end
end

if $0 == __FILE__
  main(ARGV)
end

__END__

= Example =

  # show access log that runtime is greater than 0.1
  $ flgrep --column=runtime --value=0.1 --method=gt

  # show access log thath match top page.
  $ flgrep --column=path_info --value='^/$'

  # color match.
  $ flgrep --column=path_info --value='^/$' --mode=color

